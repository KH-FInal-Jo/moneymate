<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="KmemberMapper">


	<resultMap type="Member" id="member_rm">

		<id property="memberNo" column="MEMBER_NO" />

		<!-- DB의 일반 컬럼들 -->
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="memberAddress" column="MEMBER_ADDRESS" />
		<result property="secessionFlag" column="SECESSION_FL" />
		<result property="authority" column="AUTHORITY" />
		<result property="profileImage" column="PROFILE" />

	</resultMap>

	<resultMap type="CBoard" id="board_rm">

		<id property="boardNo" column="BOARD_NO" />

		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardCode" column="BOARD_CODE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCreateDate" column="BOARD_DT" />
		<result property="boardUpdateDate" column="BOARD_UPDATE_DT" />
		<result property="readCount" column="READ_COUNT" />
		<result property="commentCount" column="COMMENT_COUNT" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />

		<result property="memberNo" column="MEMBER_NO" />
		<result property="profileImage" column="PROFILE_IMG" />

		<result property="thumbnail" column="THUMBNAIL" />


		<collection property="imageList" select="selectImageList"
			column="BOARD_NO" javaType="java.util.ArrayList" ofType="BoardImage">
		</collection>

		<collection property="commentList"
			select="selectCommentList" column="BOARD_NO"
			javaType="java.util.ArrayList" ofType="Comment">
		</collection>

	</resultMap>

	<!-- 회원 정보 수정 -->
	<update id="updateInfo" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_NICKNAME = #{memberNickname}
		,MEMBER_TEL = #{memberTel}
		,MEMBER_ADDRESS = #{memberAddress}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 프로필 이미지 변경 -->
	<update id="updateProfileImage">
		UPDATE MEMBER SET
		PROFILE = #{profileImage}
		WHERE
		MEMBER_NO = #{memberNo}
	</update>

	<!-- 비밀번호 찾기 할때 일치하는 회원 수 -->
	<select id="memberCheck" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_NAME = #{memberName}
		AND MEMBER_TEL = #{memberTel}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="changePw" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_PW = #{memberPw}
		WHERE
		MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 비밀번호 조회해서 암호화 하는것 -->
	<select id="selectEncPw" parameterType="_int" resultType="string">
		SELECT MEMBER_PW FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	
	<!-- 로그인x 비밀번호 변경 (휴대폰 인증 후) -->
	<update id="changePw2" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_TEL = #{memberTel}
		
	</update>


	<!-- 비밀번호 찾기 할때 일치하는 회원 수 2(이메일 인증) -->
	<select id="memberCheck2" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_NAME = #{memberName}
	</select>
	
	
	
	<!-- 비밀번호 재설정 이메일 인증 -->
   	<update id="updateAuthKey">
		UPDATE "AUTH_KEY" SET
		CODE = #{authKey},
		CREATE_DATE = sysdate
		WHERE MEMBER_EMAIL = #{email}
		AND AUTH_USE = 3
	</update>

	<insert id="insertAuthKey">
		INSERT INTO "AUTH_KEY" VALUES(SEQ_AUTH_KEY_NO.NEXTVAL, #{authKey}, SYSDATE, 3, #{email})
	</insert>

	<select id="checkAuthKey" resultType="int">
		SELECT COUNT(*) FROM "AUTH_KEY"
		WHERE MEMBER_EMAIL = #{email}
		AND CODE = #{inputKey}
		AND AUTH_USE = 3
	</select>
	
	
	
	
	
	<!-- 로그인x 비밀번호 변경(이메일 인증 후) -->
	<update id="changePw3" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_EMAIL = #{memberEmail}
		
	</update>
	
	
	<!-- 아이디찾기 같은지 비교하는거 (핸드폰 인증)-->
	<select id="memberCheckId" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_NAME=#{memberName}
		AND MEMBER_TEL=#{memberTel}
	</select>
	
	<!-- 찐으로 찾는다 아이디 -->
	<select id="memberFindId" resultType="string">
		SELECT MEMBER_EMAIL FROM MEMBER
		WHERE MEMBER_NAME=#{memberName}
		AND MEMBER_TEL=#{memberTel}
		AND SECESSION_FL = 'N'
	</select>


</mapper>
