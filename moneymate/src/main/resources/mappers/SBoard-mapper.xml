<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SBoardMapper">

	<resultMap type="SBoard" id="SBoard-rm">
		
		<id property="boardNo" column="BOARD_NO" />
		
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardCode" column="BOARD_CODE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCreateDate" column="BOARD_DT" />
		<result property="boardUpdateDate" column="BOARD_UPDATE_DT" />
		<result property="readCount" column="READ_COUNT" />
		<result property="likeCount" column="LIKE_COUNT" />
		
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="profileImage" column="PROFILE" />
		
		<result property="thumbNail" column="THUMBNAIL" />
		
		
		<collection property="imageList" select="selectImageList"
			column="BOARD_NO" javaType="java.util.ArrayList" ofType="SBoardImage">

		</collection>
		
	
	</resultMap>
	
	
	<!-- SBoardImage resultMap -->
	<resultMap type="SBoardImage" id="SBoardImage_rm">

		<id property="imageNo" column="IMG_NO" />

		<result property="imageNo" column="IMG_CD" />
		<result property="imagePath" column="IMG_PATH" />
		<result property="imageRename" column="IMG_RENAME" />
		<result property="imageOriginal" column="IMG_ORIGINAL" />
		<result property="imageOrder" column="IMG_LEVEL" />
		<result property="boardNo" column="BR_NO" />

	</resultMap>
	
	
	
	
	<!-- Alert resultMap -->
	<resultMap type="Alert" id="Alert-rm">

		<id property="alertNo" column="ALERT_NO" />

		<result property="boardNo" column="BOARD_NO" />
		<result property="commentNo" column="COMMENT_NO" />
		<result property="alertSt" column="ALERT_ST" />
		<result property="alertTarget" column="ALERT_TARGET" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="content" column="CONTENT" />
		<result property="alarmDate" column="COMMENT_DT" />
		<result property="profile" column="PROFILE" />

	</resultMap>
	
	

	<!-- 게시글 삽입 -->
	<insert id="columnInsert" parameterType="SBoard"
		useGeneratedKeys="true">

		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO BOARD
		VALUES( #{boardNo},
		#{boardTitle},
		#{boardContent},
		DEFAULT, DEFAULT, DEFAULT, DEFAULT,
		#{boardCode},
		#{memberNo})
	</insert>
	
	
	
	<!-- 이미지 리스트(여러 개) 삽입 -->
	<insert id="insertImageList" parameterType="list">
		INSERT INTO IMAGE
		SELECT  A.*
		FROM (

		<foreach collection="list" item="img" separator=" UNION ALL ">
			SELECT
			#{img.boardNo} BR_NO,
			4 IMG_CD,
			#{img.imagePath} IMG_PATH,
			#{img.imageRename} IMG_RENAME,
			#{img.imageOriginal} IMG_ORIGINAL,
			#{img.imageOrder} IMG_LEVEL
			FROM DUAL
		</foreach>

		)A

	</insert>
	
	<!-- 칼럼 게시글 목록 조회 -->
	<select id="columnList" resultMap="SBoard-rm">
	
		SELECT BOARD_NO, BOARD_TITLE, BOARD_DT, READ_COUNT, IMG_PATH || IMG_RENAME AS THUMBNAIL FROM IMAGE I
        JOIN BOARD ON (BR_NO = BOARD_NO)
        JOIN MEMBER USING(MEMBER_NO)
		WHERE I.BR_NO = BOARD_NO
		AND IMG_LEVEL = 0
		AND BOARD_CODE = 4
		AND BOARD_ST = 'N'
        ORDER BY BOARD_NO DESC
	
	</select>
	
	<!-- 이전 게시글 조회 -->
	<select id="columnPrevieous" resultType="_int">
		SELECT MAX(BOARD_NO) AS PREVIOUS FROM(
		SELECT BOARD_NO FROM BOARD
		<![CDATA[
		WHERE BOARD_NO < #{boardNo}
		]]>
		AND BOARD_CODE=4
		AND BOARD_ST = 'N'
		)
	</select>
	
	
	<!-- 다음 게시글 조회 -->
	<select id="columnNext" resultType="_int">
		SELECT MIN(BOARD_NO) AS PREVIOUS FROM(
		SELECT BOARD_NO FROM BOARD
		<![CDATA[
		WHERE BOARD_NO > #{boardNo}
		]]>
		AND BOARD_CODE=4
		AND BOARD_ST = 'N'
		)
	</select>
	
	
	
	<!-- 게시글 상세 조회 -->
	<select id="selectBoard" resultMap="SBoard-rm">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, BOARD_CODE,
		READ_COUNT, MEMBER_NICKNAME, MEMBER_NO, MEMBER_EMAIL,
		PROFILE,
		TO_CHAR(BOARD_DT,'YYYY"년" MM"월" DD"일" HH24:MI:SS')
		BOARD_DT,
		TO_CHAR(BOARD_UPDATE_DT,'YYYY"년" MM"월" DD"일" HH24:MI:SS')
		BOARD_UPDATE_DT,
		(SELECT COUNT(*)FROM "LIKE" L
		WHERE L.BR_NO = B.BOARD_NO) LIKE_COUNT
		FROM BOARD B
		JOIN MEMBER USING (MEMBER_NO)
		WHERE
		BOARD_ST = 'N'
		AND BOARD_CODE = #{boardCode}
		AND BOARD_NO = #{boardNo}
	</select>
	
	<!-- 특정 게시글 이미지 조회 -->
	<select id="selectImageList" resultMap="SBoardImage_rm">
		SELECT * FROM IMAGE
		WHERE BR_NO = #{boardNo}
		AND IMG_CD = 4
		ORDER BY IMG_LEVEL

	</select>
	
	
	<!-- 칼럼 좋아요 여부 확인 -->
	<select id="columnLikeCheck" resultType="_int">
	
		SELECT COUNT(*) FROM
		"LIKE"
		WHERE BR_NO = #{boardNo}
		AND MEMBER_NO = #{memberNo}
        AND LIKE_CODE = 1	
	
	</select>
	
	
	<!-- 좋아요 삽입 -->
	<insert id="likeInsert">
		INSERT INTO "LIKE" 
		VALUES(#{memberNo}, #{boardNo}, 1)
	</insert>
	
	<!-- 좋아요 삭제 -->
	<delete id="likeDelete">
		DELETE FROM "LIKE" 
		WHERE MEMBER_NO = #{memberNo}
		AND BR_NO = #{boardNo}
		AND LIKE_CODE = 1
	</delete>
	
	
	<!-- 좋아요 수 확인 -->
	<select id="likeCount" resultType="_int">
	
		SELECT COUNT(*) AS LIKE_COUNT FROM
		"LIKE"
		WHERE BR_NO = #{boardNo}
        AND LIKE_CODE = 1
	
	</select>
	

	<!-- 조회수 증가 -->
	<update id="readCount">
		UPDATE BOARD
		SET READ_COUNT = READ_COUNT + 1
		WHERE
		BOARD_NO = #{boardNo}
	</update>
	
	
	
	<!-- 다른 칼럼보기 랜덤 3개 -->
	<select id="randomCount" resultMap="SBoard-rm">
	
		SELECT BOARD_NO, BOARD_TITLE, THUMBNAIL
			FROM (
			  SELECT BOARD_NO, BOARD_TITLE, IMG_PATH || IMG_RENAME AS THUMBNAIL 
			  FROM IMAGE
			  JOIN BOARD ON(BOARD_NO = BR_NO)
			  WHERE BOARD_ST = 'N' AND BOARD_CODE = 4
			  AND BOARD_NO != #{boardNo}
			  AND IMG_LEVEL = 0
			  ORDER BY DBMS_RANDOM.RANDOM
			)
		<![CDATA[
		WHERE ROWNUM <= 3
		]]>
	
	</select>
	
	<!-- 알림 데이터 가져오기 -->
	<select id="alertNumber" resultMap="Alert-rm">
	
		SELECT A.ALERT_NO, A.BOARD_NO, A.COMMENT_NO, A.ALERT_ST, A.ALERT_TARGET, M.MEMBER_NICKNAME, M.PROFILE
        ,
        <![CDATA[ 
        CASE
            WHEN LENGTH(C.COMMENT_CONTENT) <= 30 THEN C.COMMENT_CONTENT]]>
            ELSE SUBSTR(C.COMMENT_CONTENT,1,30) || '...'
            END AS CONTENT
        ,<![CDATA[ 
        CASE  
               WHEN SYSDATE - C.COMMENT_DT < 1/24/60
               THEN FLOOR( (SYSDATE - C.COMMENT_DT) * 24 * 60 * 60 ) || '초 전'
               WHEN SYSDATE - C.COMMENT_DT < 1/24
               THEN FLOOR( (SYSDATE - C.COMMENT_DT) * 24 * 60) || '분 전'
               WHEN SYSDATE - C.COMMENT_DT < 1
               THEN FLOOR( (SYSDATE - C.COMMENT_DT) * 24) || '시간 전'
               ELSE TO_CHAR(C.COMMENT_DT, 'YYYY-MM-DD')]]>
            END COMMENT_DT
        FROM ALERT A
        JOIN "COMMENT" C ON (A.COMMENT_NO-1) = C.COMMENT_NO
        JOIN "MEMBER" M ON C.MEMBER_NO = M.MEMBER_NO
		WHERE A.MEMBER_NO = #{memberNo}
		AND A.ALERT_ST = 'N'
		AND C.MEMBER_NO != #{memberNo}
		ORDER BY A.ALERT_NO DESC
	
	</select>
	
	<select id="memberNo" resultType="_int">
	
		SELECT (SELECT MEMBER_NO  FROM BOARD
	      WHERE BOARD_NO = (SELECT BOARD_NO FROM "COMMENT" WHERE COMMENT_NO = #{commentNo})) B_MEMBER_NO,
	      (SELECT MEMBER_NO  FROM "COMMENT"
	      WHERE COMMENT_NO = (SELECT PARENT_NO FROM "COMMENT" WHERE COMMENT_NO = #{commentNo})) C_MEMBER_NO
	      FROM DUAL
	
	</select>
	
	
	
	
	
	
</mapper>