<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chattingMapper">

	<resultMap type="ChattingRoom" id="chattingRoom_rm">
		<id property="chattingNo" column="CHATTING_NO" />

		<result property="lastMessage" column="LAST_MESSAGE" />
		<result property="sendTime" column="SEND_TIME" />
		<result property="targetNo" column="TARGET_NO" />
		<result property="targetNickName" column="TARGET_NICKNAME" />
		<result property="targetProfile" column="TARGET_PROFILE" />
		<result property="notReadCount" column="NOT_READ_COUNT" />
		<result property="stateMessage" column="ST_MESSAGE" />
	</resultMap>

	<resultMap type="Message" id="message_rm">
		<id property="messageNo" column="MESSAGE_NO" />

		<result property="messageContent" column="MESSAGE_CONTENT" />
		<result property="readFlag" column="READ_FL" />
		<result property="senderNo" column="SENDER_NO" />
		<result property="chattingNo" column="CHATTING_NO" />
		<result property="sendTime" column="SEND_TIME" />
	</resultMap>


	<resultMap type="Member" id="member_rm">
		<id property="memberNo" column="MEMBER_NO" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberNickname" column="MEMBER_NICKNAME" />
		<result property="profileImage" column="PROFILE" />
	</resultMap>


	<!--========================================================================================= -->

	<!-- 채팅방 목록 조회 -->
	<select id="selectRoomList" resultMap="chattingRoom_rm">
		
SELECT
    CR.CHATTING_NO,
    (SELECT MESSAGE_CONTENT
     FROM (SELECT *
           FROM MESSAGE M2
           WHERE M2.CHATTING_NO = CR.CHATTING_NO
           ORDER BY M2.MESSAG_NO DESC)
     WHERE ROWNUM = 1) AS LAST_MESSAGE,
    (SELECT TO_CHAR(MAX(SEND_TIME), 'YYYY-MM-DD HH24:MI:SS')
     FROM MESSAGE M
     WHERE CR.CHATTING_NO = M.CHATTING_NO) AS SEND_TIME,
    NVL2((SELECT OPEN_MEMBER
          FROM CHATTING_ROOM R2
          WHERE R2.CHATTING_NO = CR.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberNo}), CR.PARTICIPANT, CR.OPEN_MEMBER) AS TARGET_NO,
    NVL2((SELECT OPEN_MEMBER
          FROM CHATTING_ROOM R2
          WHERE R2.CHATTING_NO = CR.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberNo}),
         (SELECT MEMBER_NICKNAME
          FROM MEMBER
          WHERE MEMBER_NO = CR.PARTICIPANT),
         (SELECT MEMBER_NICKNAME
          FROM MEMBER
          WHERE MEMBER_NO = CR.OPEN_MEMBER)) AS TARGET_NICKNAME,
    NVL2((SELECT OPEN_MEMBER
          FROM CHATTING_ROOM R2
          WHERE R2.CHATTING_NO = CR.CHATTING_NO
            AND R2.OPEN_MEMBER = #{memberNo}),
         (SELECT PROFILE
          FROM MEMBER
          WHERE MEMBER_NO = CR.PARTICIPANT),
         (SELECT PROFILE
          FROM MEMBER
          WHERE MEMBER_NO = CR.OPEN_MEMBER)) AS TARGET_PROFILE,
    (SELECT COUNT(*)
     FROM MESSAGE M
     WHERE M.CHATTING_NO = CR.CHATTING_NO
       AND M.READ_FL = 'N'
       AND M.SENDER_NO != #{memberNo}) AS NOT_READ_COUNT,
    (SELECT MAX(MESSAG_NO)
     FROM MESSAGE M
     WHERE CR.CHATTING_NO = M.CHATTING_NO) AS MAX_MESSAG_NO,
    (SELECT ST_MESSAGE
     FROM MESSAGE
     WHERE MESSAG_NO = (SELECT MAX(MESSAG_NO)
                         FROM MESSAGE M
                         WHERE CR.CHATTING_NO = M.CHATTING_NO)) AS ST_MESSAGE
FROM CHATTING_ROOM CR
WHERE CR.OPEN_MEMBER = #{memberNo} OR CR.PARTICIPANT = #{memberNo}
ORDER BY MAX_MESSAG_NO DESC NULLS LAST


	</select>


	<!-- 채팅 확인 -->
	<select id="checkChattingNo" resultType="_int">
		SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO FROM CHATTING_ROOM
		WHERE (OPEN_MEMBER = #{loginMemberNo} AND PARTICIPANT = #{targetNo})
		OR (OPEN_MEMBER = #{targetNo} AND PARTICIPANT = #{loginMemberNo})
	</select>

	<!-- 채팅방 생성 -->
	<insert id="createChattingRoom" parameterType="map"
		useGeneratedKeys="true">

		<selectKey keyProperty="chattingNo" order="BEFORE"
			resultType="_int">
			SELECT SEQ_CHATTING_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO CHATTING_ROOM
		VALUES(#{chattingNo}, #{loginMemberNo}, #{targetNo}, DEFAULT)
	</insert>



	<!-- 채팅 메세지 삽입 -->
	<insert id="insertMessage">
		INSERT INTO "MESSAGE"
		VALUES(SEQ_MESSAGE_NO.NEXTVAL, #{messageContent}, DEFAULT, DEFAULT, #{chattingNo}, #{senderNo})
	</insert>


	<!-- 채팅 메세지 중 내가 보내지 않은 글을 읽음으로 표시 -->
	<update id="updateReadFlag">
		UPDATE "MESSAGE" SET
		READ_FL = 'Y'
		WHERE CHATTING_NO = #{chattingNo}
		AND SENDER_NO != #{memberNo}
	</update>

	<!-- 채팅방 메세지 조회 -->
	<select id="selectMessageList" resultMap="message_rm">
		SELECT MESSAG_NO, MESSAGE_CONTENT, READ_FL, SENDER_NO, CHATTING_NO,
		TO_CHAR(SEND_TIME, 'YYYY.MM.DD HH24:MI') SEND_TIME
		FROM MESSAGE
		WHERE CHATTING_NO = #{chattingNo}
		ORDER BY MESSAG_NO
	</select>


	<!-- 채팅 상대 검색 -->
	<select id="selectTarget" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, PROFILE
			FROM MEMBER
			WHERE MEMBER_NO != #{memberNo}
			AND MEMBER_NO NOT IN (
			  SELECT DISTINCT
			    CASE
			      WHEN OPEN_MEMBER = #{memberNo} THEN PARTICIPANT
			      ELSE OPEN_MEMBER
			    END AS MEMBER_NO
			  FROM CHATTING_ROOM
			  WHERE OPEN_MEMBER = #{memberNo}
			  OR PARTICIPANT = #{memberNo}
			)
			AND SECESSION_FL = 'N'
	</select>

</mapper>
